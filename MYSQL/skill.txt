Домашняя работа. 

1. Написать запрос для выбора студентов в порядке их регистрации на сервисе.
SELECT *  FROM Students ORDER BY registration_date;


2. Написать запрос для выбора 5 самых дорогих курсов, на которых более 4 студентов, и которые длятся более 10 часов.
SELECT name, price, students_count, duration FROM Courses WHERE students_count > 4 AND duration >10 LIMIT 5;

3. Написать один (!) запрос, который выведет одновременно список из имен трёх самых молодых студентов, имен трёх самых старых учителей и названий трёх самых продолжительных курсов.
(SELECT name, age FROM Students ORDER BY age ASC LIMIT 3)
 UNION ALL 
(SELECT name, age FROM Students ORDER BY age DESC LIMIT 3) 
UNION ALL 
(SELECT name, duration  FROM Courses ORDER BY duration DESC LIMIT 3);

4.Написать запрос для выбора среднего возраста всех учителей с зарплатой более 10000
SELECT AVG(age) FROM Teachers WHERE salary > 10000;
+----------+
| AVG(age) |
+----------+
|  29.1000 |
+----------+
1 row in set (0.00 sec)

5. Написать запрос для расчета суммы, сколько будет стоить купить все курсы по дизайну.   
SELECT SUM(price) AS total_price FROM Courses WHERE type="DESIGN";
+-------------+
| total_price |
+-------------+
|      859276 |
+-------------+
1 row in set (0.00 sec)


6.Написать запрос для расчёта, сколько минут (!) длятся все курсы по Программированию.
SELECT SUM(duration * 60) AS total_duration FROM Courses WHERE type="PROGRAMMING";
+----------------+
| total_duration |
+----------------+
|           6780 |
+----------------+
1 row in set (0.00 sec)

7.  Напишите запрос, который выводит сумму, сколько часов должен в итоге проучиться каждый студент (сумма длительности всех курсов на которые он подписан).
В результате запрос возвращает две колонки Имя Студента — Кол-во часов.

SELECT Students.name as student_name, SUM(duration) FROM Students 
JOIN Subscriptions ON Students.id = Subscriptions.student_id 
JOIN Courses ON Courses.id = Subscriptions.course_id 
GROUP BY Students.name ;

8.   Напишите запрос, который посчитает для каждого учителя, средний возраст его учеников. 
В результате запрос возвращает две колонки Имя Учителя — Средний Возраст Учеников.

SELECT Teachers.name AS teacher_name, AVG(Students.age) FROM Teachers 
JOIN Courses ON Teachers.id = Courses.teacher_id 
JOIN Subscriptions ON Courses.id = Subscriptions.course_id 
JOIN Students ON Students.id = Subscriptions.student_id 
GROUP BY Teachers.name;


9.  Напишите запрос, который выводит среднюю зарплату учителей для каждого типа курса (Дизайн/Программирование/Маркетинг и т.д.)
В результате запрос возвращает две колонки Тип Курса — Средняя зарплата

SELECT type AS type_courses, AVG(Teachers.salary) AS average_salary FROM Courses 
JOIN Teachers ON Teachers.id = Courses.teacher_id 
GROUP BY type;
+--------------+----------------+
| type_courses | average_salary |
+--------------+----------------+
| PROGRAMMING  |      8772.7273 |
| DESIGN       |     12266.6667 |
| MARKETING    |      4038.4615 |
| MANAGEMENT   |     11857.1429 |
+--------------+----------------+
4 rows in set (0.00 sec)


